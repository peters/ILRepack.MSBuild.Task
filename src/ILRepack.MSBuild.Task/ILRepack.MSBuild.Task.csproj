<Project Sdk="Microsoft.NET.Sdk" ToolsVersion="15.0">

  <PropertyGroup>
    <PackageId>ILRepack.MSBuild.Task</PackageId>
    <Description>MSBuild task for ILRepack which is an open-source alternative to ILMerge.</Description>
    <Authors>Peter Rekdal Sunde</Authors>
    <Product>ILRepack.MSBuild.Task</Product>
    <Copyright>Copyright Â© Peter Rekdal Sunde</Copyright>
    <NeutralLanguage>en-US</NeutralLanguage>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <PackageLicenseUrl>https://opensource.org/licenses/MIT</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/peters/ILRepack.MSBuild.Task</PackageProjectUrl>
    <RepositoryUrl>https://github.com/peters/ILRepack.MSBuild.Task.git</RepositoryUrl>
    <PackageReleaseNotes>See $(PackageProjectUrl)/blob/master/CHANGELOG.md#v$(VersionPrefix.Replace('.','')) for release notes.</PackageReleaseNotes>
    <RepositoryType>git</RepositoryType>
  </PropertyGroup>

  <PropertyGroup>
    <TargetFrameworks Condition="'$(ILRepackMSBuildTaskPackageForRelease)' != 'true' AND '$(OsPlatform)' == 'Windows'">netcoreapp2.1;netstandard2.0;net46</TargetFrameworks>
    <TargetFrameworks Condition="'$(ILRepackMSBuildTaskPackageForRelease)' != 'true' AND '$(OsPlatform)' != 'Windows'">netcoreapp2.2;netstandard2.0</TargetFrameworks>
    <TargetFrameworks Condition="'$(ILRepackMSBuildTaskPackageForRelease)' == 'true'">netcoreapp2.1;netstandard2.0;net46</TargetFrameworks>
    <RootNamespace>ILRepack.MSBuild.Task</RootNamespace>
    <AssemblyName>ILRepack.MSBuild.Task</AssemblyName>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <IsPackable>true</IsPackable>
    <IsTestProject>false</IsTestProject>
    <BuildOutputTargetFolder>tasks</BuildOutputTargetFolder>
    <Platforms>AnyCPU</Platforms>
  </PropertyGroup>

  <ItemGroup>
    <Content Include="ILRepack.MSBuild.Task.TargetFramework.props" Pack="true" PackagePath="build\ILRepack.MSBuild.Task.props" />
    <Content Include="ILRepack.MSBuild.Task.TargetFrameworks.props" Pack="true" PackagePath="buildMultiTargeting\ILRepack.MSBuild.Task.props" />
    <Content Include="..\..\build\ilrepack\windows\ilrepack.exe" Pack="true" PackagePath="tools\" CopyToOutputDirectory="Always" Condition="'$(ILRepackMSBuildTaskPackageForRelease)' == 'true' AND '$(OsPlatform)' == 'Windows'" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="nupkgs\**" />
    <EmbeddedResource Remove="nupkgs\**" />
    <None Remove="nupkgs\**" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Build.Framework" Version="15.9.20" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Build.Utilities.Core" Version="15.9.20" PrivateAssets="All" />
  </ItemGroup>

  <PropertyGroup>
    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeFilesInPackage</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>
  <Target Name="IncludeFilesInPackage">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\Microsoft.Build.Framework.dll" PackagePath="$(BuildOutputTargetFolder)\$(TargetFramework)" />
      <TfmSpecificPackageFile Include="$(OutputPath)\Microsoft.Build.Utilities.Core.dll" PackagePath="$(BuildOutputTargetFolder)\$(TargetFramework)" />
    </ItemGroup>
  </Target>

  <ItemGroup>
    <ProjectReference Include="..\..\deps\ilrepack\deps\bamlparser\BamlParser.csproj" />
    <ProjectReference Include="..\..\deps\ilrepack\deps\cecil\Mono.Cecil.csproj" />
    <ProjectReference Include="..\..\deps\ilrepack\deps\fasterflect\Fasterflect.Netstandard.csproj" />
    <ProjectReference Include="..\..\deps\ilrepack\ILRepack\ILRepack.csproj" />
    <ProjectReference Update="@(ProjectReference)" PrivateAssets="All" />
  </ItemGroup>

  <Target Name="ILRepackThisAssembly" AfterTargets="Build" Condition="'$(ILRepackMSBuildTaskPackageForRelease)' == 'true' AND '$(OsPlatform)' == 'Windows'">

    <PropertyGroup> 
      <InputAssemblies Condition="'$(IsNetFullFramework)' == 'true'">
        bamlparser.dll 
        fasterflect.netstandard.dll 
        ilrepack.dll
        mono.cecil.dll 
      </InputAssemblies>
      <InputAssemblies Condition="$(TargetFramework.Contains('netstandard'))">
        bamlparser.dll 
        fasterflect.netstandard.dll 
        ilrepack.dll
        mono.cecil.dll
        system.collections.immutable.dll
        system.reflection.emit.ilgeneration.dll
        system.reflection.emit.lightweight.dll
        system.runtime.interopservices.runtimeinformation.dll
        system.runtime.serialization.primitives.dll
        system.text.encoding.codepages.dll
        system.threading.dll
        system.threading.thread.dll
      </InputAssemblies>
      <InputAssemblies Condition="$(TargetFramework.Contains('netcoreapp'))">
        bamlparser.dll 
        fasterflect.netstandard.dll 
        ilrepack.dll
        mono.cecil.dll
        system.text.encoding.codepages.dll
      </InputAssemblies>
      <WorkingDirectory>$(OutputPath)</WorkingDirectory>
    </PropertyGroup>

    <Exec IgnoreExitCode="true" WorkingDirectory="$(WorkingDirectory)" Command="ilrepack.exe /target:library /internalize $(AssemblyName).dll $([System.Text.RegularExpressions.Regex]::Replace( $(InputAssemblies), '\r\n', ' ' ) ) /out:./$(AssemblyName).dll" />
    
  </Target>

</Project>